# 고장난 통신탑
# 큰수로 작은 수를 나눴을 때 나머지가 0이면 통신탑간 통신 가능
# 1번이 짝수와 통신할 경우 비용이 2 나머지는 1
# 통신비용 최소화를 위한 경로 구하기
import math
T = int(input())
for t in range(T):
    a, b= map(int, input().split())
    # 한개라도 짝수라면 1을 거치면 비싸게 된다.
    # 1을 제외한 최대 공약수를 구하고 최대 공약수가 1밖에 없을 때만 1을 출력
    # a,b 의 범위는 2*10^7 서로 다르다.
    # 겹치는 비용은 없다. -? 1을 제외한 단하나의 수로만 나눠진다는 뜻이니깐
    # 1을 제외한 서로소를 의미하는 것
    # 다만 그 값중에 합이 가장 최소인 수를 찾기로 했다.
    if (a == 1 and b %2 == 0) or (b== 1 and a% 2== 0):
        print(a,2,b)
    else:
        if max(a,b) % min(a,b) == 0:
            print(a,b)
            # 1원인 곳
        else:
            # 1과 홀수는 1원이다.
            # 2원 목표
            if a % 2 == 1 and b % 2== 1:
                print(a,1,b)
            # 둘다 짝수이면 2로 통신
            elif a % 2 == 0 and b % 2 == 0:
                print(a,2,b)
            else:
            # 하나라도 짝수이면 1로 하면 3원 이상이 된다.           
                c = math.gcd(a,b)
                # 최대 공약수가 1이면 최소 공배수로 이용
                # 2원 소모
                if c == 1:
                    print(a,a*b,b)
                else:
                    # 최대 공약수 중 가장 작은 값으로 c를 지정해야한다.
                    d = a*b//c
                    c = min(d,c)
                    print(a,c,b)


